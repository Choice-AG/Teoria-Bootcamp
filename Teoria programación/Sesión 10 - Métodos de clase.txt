------------------------------------------------------------------------------------------------------------------------------------------

MÉTODOS DE CLASE

CLASE A
	PROPIEDAD 1
	PROPIEDAD 2

	[VISIBILIDAD][NOMBRE_METODO]([PARAMETROS])[VALOR]
	PUBLICA leerLibros(TEXTO libro) TEXTO contenido

//COMO SERIA EN GO
type miclase struct{}
func (m miclase) leerLibros(libro string) string {
	...código...
}

//COMO SERIA EN PHP
class MiClase {
	public function leerLibros($libro) {
		return "aaa"
	}
}

INTERFACE USUARIOS	
	METODO GETUSUARIOS()

CLASE USUARIOSTXT IMPLEMENTA LA INTERFACE USUARIOS
	METODO GETUSUARIOS()
		LEER UN FICHERO .TXT
		DEVOLVER TODAS LAS LINEAS
		
CLASE USUARIOSBBDD IMPLEMENTA LA INTERFACE USUARIOS
	METODO GETUSUARIOS()
		CONECTARME A MYSQL
		EJECUTAR "SELECT * FROM ..."
		DEVOLVER TODOS LOS RESULTADOS

CLASE USUARIOSREDIS IMPLEMENTA LA INTERFACE USUARIOS
	METODO GETUSUARIOS()
	CONECTATE A REDIS
	DEVOLVER TODOS LOS USUARIOS
		
FUNCION LISTARUSUARIOS(NECESITO INTERFACE USUARIOS)
	(DE LA INTERFACE USUARIOS EJECUTA EL METODO GETUSUARIOS)
-	
INVOCO A LISTARUSUARIOS(TE DOY OBJETO USUARIOSBBDD)

FUNCION LISTARUSUARIOSTXT()
	LEER UN FICHERO .TXT
	DEVOLVER TODAS LAS LINEAS
	
FUNCION LISTARUSUARIOSBBDD()
	CONECTARME A MYSQL
	EJECUTAR "SELECT * FROM ..."
	DEVOLVER TODOS LOS RESULTADOS
-
INVOCO A LISTARUSUARIOS(TE DOY OBJETO USUARIOSBBDD)
------------------------------------------------------------------------------------------------------------------------------------------

PARÁMETROS
Hay parámetros de 2 tipos:

PASO POR VALOR
Consiste en que cuando yo paso por una funcion copio los valores en memoria y se los doy

FUNCION SUMA(INT A, INT B) {
	DEVUELVE A + B;
}

VAR VALA = 5;
VAR VALB = 10;
SUMA(VALA, VALB) //Aquí se copian los valores de las variables A y B.

EJEMPLO PRÁCTICO

    public static void main(String[] args) {
        int valA = 5; // int = 32 bits, 4 bytes
        int valB = 10; // int = 32 bits, 4 bytes

        suma(valA, valB);

        System.out.println(valA);
        System.out.println(valB);
    }

    public static int suma(int a, int b) {
        return a + b;
    }
}

------------------------------------------------------------------------------------------------------------------------------------------

RECURSIVIDAD
Consiste en que una funcion se va a llamar a si mismo una y otra y otra vez.

FUNCION SUMA(INT A, INT B) {
	VAR TEMP = A + B;
	
	SI TEMP NO ES MAYOR A 15
	SUMA (A, TEMP)
}

EJEMPLO PRÁCTICO

public static int factorial(int numero) {
        int resultado;
        if (numero == 1) {
            return 1;
        }
        
        resultado = factorial(numero - 1) * numero;
        return resultado;
    }

------------------------------------------------------------------------------------------------------------------------------------------